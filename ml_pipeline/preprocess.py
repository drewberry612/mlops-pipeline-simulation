import sqlite3
import os
from PIL import Image

def export_class_names():
	db_path = os.path.join(os.path.dirname(__file__), '../data_warehouse/warehouse.db')
	conn = sqlite3.connect(db_path)
	cursor = conn.cursor()
	cursor.execute("SELECT DISTINCT label FROM images WHERE label IS NOT NULL")
	labels = [row[0] for row in cursor.fetchall()]
	conn.close()
	out_path = os.path.join(os.path.dirname(__file__), 'class_names.py')
	with open(out_path, 'w', encoding='utf-8') as f:
		f.write('# This file is auto-generated by preprocess.py\n')
		f.write('# Used to store class names extracted from the database for use in prediction\n')
		f.write('# No need to edit this file manually\n')
		f.write(f'class_names = {labels!r}\n')

def preprocess_image(image_path, img_size=(28, 28), img_channels=1): # change to not open file
	"""
	Generic preprocessing: grayscale, resize, and save as PNG.
	"""
	img = Image.open(image_path).convert('L')  # grayscale
	img = img.resize(img_size)
	return img

def process_all_images_raw_to_processed(img_size=(28, 28), img_channels=1):
	"""
	Process all images in raw folder and save to processed folder.
	"""
	base_dir = os.path.join(os.path.dirname(__file__), '../object_storage')
	raw_dir = os.path.join(base_dir, 'raw')
	processed_dir = os.path.join(base_dir, 'processed')
	os.makedirs(processed_dir, exist_ok=True)

	for filename in os.listdir(raw_dir):
		raw_path = os.path.join(raw_dir, filename)
		if os.path.isfile(raw_path):
			img = preprocess_image(raw_path, img_size, img_channels)
			processed_path = os.path.join(processed_dir, filename)
			img.save(processed_path, format='PNG')
